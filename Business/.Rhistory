library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
Zelfdodingen <- SpoorData%>%
select(Totaal_zelfdoding, Geslacht, Perioden)%>%
filter(Geslacht == "Mannen" | Geslacht == "Vrouwen")
ggplot(data=Zelfdodingen, aes(x=Perioden, y=Totaal_zelfdoding, fill= Geslacht, width =1.2)) +
geom_bar(stat="identity", position=position_dodge(width=0.25))+
scale_fill_manual(values = c("#add8e6", "Pink"))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Suïcides gebasseerd op geslacht",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
Zelfdoding_trein <- SpoorData%>%
filter(Geslacht == "Mannen" | Geslacht == "Vrouwen")
ggplot(data=Zelfdoding_trein, aes(x=Perioden, y=DMV_trein, fill=Geslacht, width=1.2)) +
geom_bar(stat="identity", position=position_dodge(width=0.25))+
scale_fill_manual(values = c("#add8e6", "Pink"))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides gebasseerd op geslacht",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
Totaal_vs_trein <- SpoorData%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
Totaal_vs_trein_bar <- melt(Totaal_vs_trein, id.vars = c("Perioden"))
ggplot(data=Totaal_vs_trein_bar, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
New_Totaal_vs_trein <- Spoordata_prediction%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
Aanrijdingen <- AanrijdingData%>%
select(DMV_aanrijding_of_object_op_spoor, Aantal_storingen, Perioden)%>%
rename(Storingen=Aantal_storingen)%>%
rename('Storingen waaronder aanrijding of object op spoor'=DMV_aanrijding_of_object_op_spoor)
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
Zelfdodingen <- SpoorData%>%
select(Totaal_zelfdoding, Geslacht, Perioden)%>%
filter(Geslacht == "Mannen" | Geslacht == "Vrouwen")
ggplot(data=Zelfdodingen, aes(x=Perioden, y=Totaal_zelfdoding, fill= Geslacht, width =1.2)) +
geom_bar(stat="identity", position=position_dodge(width=0.25))+
scale_fill_manual(values = c("#add8e6", "Pink"))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Suïcides gebasseerd op geslacht",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
Zelfdoding_trein <- SpoorData%>%
filter(Geslacht == "Mannen" | Geslacht == "Vrouwen")
ggplot(data=Zelfdoding_trein, aes(x=Perioden, y=DMV_trein, fill=Geslacht, width=1.2)) +
geom_bar(stat="identity", position=position_dodge(width=0.25))+
scale_fill_manual(values = c("#add8e6", "Pink"))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides gebasseerd op geslacht",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
Totaal_vs_trein <- SpoorData%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
Totaal_vs_trein_bar <- melt(Totaal_vs_trein, id.vars = c("Perioden"))
ggplot(data=Totaal_vs_trein_bar, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
New_Totaal_vs_trein <- SpoorData_prediction%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
New_Totaal_vs_trein_bar <- melt(New_Totaal_vs_trein, id.vars = c("Perioden"))
ggplot(data=New_Totaal_vs_trein_bar, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 1979-2026",
caption= "Bron: CBS")
Zelfdodingen_trein_pogingen <- SpoorData%>%
select(DMV_trein_attempts, DMV_trein, Perioden)%>%
rename(Suïcidespogingen=DMV_trein_attempts)%>%
rename(Spoorsuïcides=DMV_trein)
Trein_pogingen <- melt(Zelfdodingen_trein_pogingen, id.vars = c("Perioden"))
ggplot(data=Trein_pogingen, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides pogingen",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
New_Zelfdodingen_trein_pogingen <- SpoorData_prediction%>%
select(DMV_trein_attempts, DMV_trein, Perioden)%>%
#filter(Perioden == '2020'+'2021'+'2022'+'2023'+'2024',+'2025'+'2026')%>%
rename(Suïcidespogingen=DMV_trein_attempts)%>%
rename(Spoorsuïcides=DMV_trein)
New_Trein_pogingen <- melt(New_Zelfdodingen_trein_pogingen, id.vars = c("Perioden"))
ggplot(data=New_Trein_pogingen, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides pogingen",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 1979-2026",
caption= "Bron: CBS")
Fix_Totaal_vs_trein <- SpoorData_solution%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
Fix_Totaal_vs_trein_bar <- melt(Fix_Totaal_vs_trein, id.vars = c("Perioden"))
ggplot(data=Fix_Totaal_vs_trein_bar, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides met RailView",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 1979-2026",
caption= "Bron: CBS")
Fix_Zelfdodingen_trein_pogingen <- SpoorData_solution%>%
select(DMV_trein_attempts, DMV_trein, Perioden)%>%
#filter(Perioden == '2020'+'2021'+'2022'+'2023'+'2024',+'2025'+'2026')%>%
rename(Suïcidespogingen=DMV_trein_attempts)%>%
rename(Spoorsuïcides=DMV_trein)
Fix_Trein_pogingen <- melt(Fix_Zelfdodingen_trein_pogingen, id.vars = c("Perioden"))
ggplot(data=Fix_Trein_pogingen, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides met RailView",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 1979-2026",
caption= "Bron: CBS")
Aanrijdingen <- AanrijdingData%>%
select(DMV_aanrijding_of_object_op_spoor, Aantal_storingen, Perioden)%>%
rename(Storingen=Aantal_storingen)%>%
rename('Storingen waaronder aanrijding of object op spoor'=DMV_aanrijding_of_object_op_spoor)
AanrijdingenBarChart <- melt(Aanrijdingen, id.vars = c("Perioden"))
ggplot(data=AanrijdingenBarChart, aes(x=factor(Perioden), y=value, fill=variable, color=variable, alpha=variable, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="dodge") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
theme(legend.title=element_blank())+
xlab("Jaar")+
ylab("Storingen")+
labs(title="Aantal storingen waaronder aanrijding of object op spoor",
#color="Zelfdodingen",
#fill="Zelfdodingen",
subtitle= "Periode van 2011-2021",
caption= "Bron: Rijdendetreinen.nl")
