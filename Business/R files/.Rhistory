rename("Month" = Accident_Month
ggplot(data = Notification, aes(x=month, y=Accident, fill=Status)) +
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Maand" = Accident_Month
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
#install.packages("lubridate")
#install.packages("reshape2")
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(lubridate)
Disruptions <- read_xlsx("disruptions-2011-2019.xlsx")
AanrijdingLocatie <- read_xlsx("Spoordata_locatie.xlsx")
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
USER_DATA <- read.csv("USER_DATA.csv")
NOTIFICATION_DATA <- read.csv("NOTIFICATION_DATA.csv")
Zelfdodingen <- SpoorData%>%
select(Totaal_zelfdoding, Geslacht, Perioden)%>%
filter(Geslacht == "Mannen" | Geslacht == "Vrouwen")
ggplot(data=Zelfdodingen, aes(x=Perioden, y=Totaal_zelfdoding, fill= Geslacht, colour= Geslacht, alpha = Geslacht, width =1.2)) +
geom_bar(stat="identity", position=position_dodge(width=0.35))+
scale_colour_manual(values=c("lightblue4", "#e75480")) +
scale_fill_manual(values = c("#add8e6", "Pink"))+
scale_alpha_manual(values=c(.8, 1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Suïcides gebasseerd op geslacht",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
Zelfdoding_trein <- SpoorData%>%
filter(Geslacht == "Mannen" | Geslacht == "Vrouwen")
ggplot(data=Zelfdoding_trein, aes(x=Perioden, y=DMV_trein, fill=Geslacht, colour=Geslacht, alpha=Geslacht, width=1.2)) +
geom_bar(stat="identity", position=position_dodge(width=0.35))+
scale_colour_manual(values=c("lightblue4", "#e75480")) +
scale_fill_manual(values = c("#add8e6", "Pink"))+
scale_alpha_manual(values=c(.8, 1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides gebasseerd op geslacht",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
Totaal_vs_trein <- SpoorData%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
Totaal_vs_trein_bar <- melt(Totaal_vs_trein, id.vars = c("Perioden"))%>%
rename(Suïcides=variable)
ggplot(data=Totaal_vs_trein_bar, aes(x=factor(Perioden), y=value, fill=Suïcides, color=Suïcides, alpha=Suïcides, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
New_Totaal_vs_trein <- SpoorData_prediction%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
New_Totaal_vs_trein_bar <- melt(New_Totaal_vs_trein, id.vars = c("Perioden"))%>%
filter(between(Perioden,2006,2026))%>%
rename(Suïcides=variable)
ggplot(data=New_Totaal_vs_trein_bar, aes(x=factor(Perioden), y=value, fill=Suïcides, color=Suïcides, alpha=Suïcides, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides",
subtitle= "Periode van 2006-2026",
caption= "Bron: CBS")
Zelfdodingen_trein_pogingen <- SpoorData%>%
select(DMV_trein_attempts, DMV_trein, Perioden)%>%
rename(Suïcides=DMV_trein)%>%
rename(Suïcidepogingen= DMV_trein_attempts)
Trein_pogingen <- melt(Zelfdodingen_trein_pogingen, id.vars = c("Perioden"))%>%
rename(Spoorsuïcides=variable)
ggplot(data=Trein_pogingen, aes(x=factor(Perioden), y=value, fill=Spoorsuïcides, color=Spoorsuïcides, alpha=Spoorsuïcides, width=1)) +
geom_bar(width=.8, stat="identity", position =position_dodge(width=0.35)) +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Spoorsuïcides pogingen",
subtitle= "Periode van 1979-2020",
caption= "Bron: CBS")
New_Zelfdodingen_trein_pogingen <- SpoorData_prediction%>%
select(DMV_trein_attempts, DMV_trein, Perioden)%>%
rename(Suïcides=DMV_trein)%>%
rename(Suïcidepogingen= DMV_trein_attempts)
New_Trein_pogingen <- melt(New_Zelfdodingen_trein_pogingen, id.vars = c("Perioden"))%>%
filter(between(Perioden,2006,2026))%>%
rename(Spoorsuïcides=variable)
ggplot(data=New_Trein_pogingen, aes(x=factor(Perioden), y=value, fill=Spoorsuïcides, color=Spoorsuïcides, alpha=Spoorsuïcides, width=1)) +
geom_bar(width=.8, stat="identity", position =position_dodge(width=0.35)) +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides pogingen",
subtitle= "Periode van 2006-2026",
caption= "Bron: CBS")
Fix_Totaal_vs_trein <- SpoorData_solution%>%
select(Totaal_zelfdoding, DMV_trein, Perioden)%>%
rename(Suïcides=Totaal_zelfdoding)%>%
rename(Spoorsuïcides=DMV_trein)
Fix_Totaal_vs_trein_bar <- melt(Fix_Totaal_vs_trein, id.vars = c("Perioden"))%>%
filter(between(Perioden,2006,2026))%>%
rename(Suïcides = variable)
ggplot(data=Fix_Totaal_vs_trein_bar, aes(x=factor(Perioden), y=value, fill=Suïcides, color=Suïcides, alpha=Suïcides, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="identity") +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides met RailView",
subtitle= "Periode van 2006-2026",
caption= "Bron: CBS")
Fix_Zelfdodingen_trein_pogingen <- SpoorData_solution%>%
select(DMV_trein_attempts, DMV_trein, Perioden)%>%
rename(Suïcides=DMV_trein)%>%
rename(Suïcidepogingen= DMV_trein_attempts)
Fix_Trein_pogingen <- melt(Fix_Zelfdodingen_trein_pogingen, id.vars = c("Perioden"))%>%
filter(between(Perioden,2006,2026))%>%
rename(Spoorsuïcides = variable)
ggplot(data=Fix_Trein_pogingen, aes(x=factor(Perioden), y=value, fill=Spoorsuïcides, color=Spoorsuïcides, alpha=Spoorsuïcides, width=1)) +
geom_bar(width=.8, stat="identity", position = position_dodge(width=0.35)) +
scale_colour_manual(values=c("lightblue4", "red")) +
scale_fill_manual(values=c("lightblue", "pink")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
xlab("Jaar")+
ylab("Zelfdodingen")+
labs(title="Verwachte Spoorsuïcides met RailView",
subtitle= "Periode van 2016-2026",
caption= "Bron: CBS")
Aanrijdingen <- AanrijdingData%>%
select(DMV_aanrijding_of_object_op_spoor, Aantal_storingen, Perioden)%>%
rename("Totaal"=Aantal_storingen)%>%
rename("Aanrijding of object op spoor" = DMV_aanrijding_of_object_op_spoor)
AanrijdingenBarChart <- melt(Aanrijdingen, id.vars = c("Perioden"))%>%
rename(Storingen = variable)
ggplot(data=AanrijdingenBarChart, aes(x=factor(Perioden), y=value, fill=Storingen, color=Storingen, alpha=Storingen, width=0.6)) +
geom_bar(width=.8, stat="identity", position ="dodge") +
scale_colour_manual(values=c("red", "lightblue4")) +
scale_fill_manual(values=c("pink", "lightblue")) +
scale_alpha_manual(values=c(.8, 1))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, vjust=1))+
xlab("Jaar")+
ylab("Storingen")+
labs(title="Aantal storingen waaronder aanrijding of object op spoor",
subtitle= "Periode van 2011-2021",
caption= "Bron: Rijdendetreinen.nl")
Spoorsuïcide_locatie <-AanrijdingLocatie%>%
rename("Vrij Spoor" = Locatie_vrij_spoor)%>%
rename("Overwegen" = Locatie_overwegen)%>%
rename("Station" = Locatie_station)
AanrijdingenLocatiePieChart <- melt(Spoorsuïcide_locatie, id.vars = c("Totaal Spoorsuïcides"))%>%
rename(Locatie = variable)
ggplot(data=AanrijdingenLocatiePieChart, aes(x="", y=value, fill=Locatie))+
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
theme_void()+
geom_text(aes(y = value, label = Locatie), color = "white", size=5) +
scale_fill_brewer(palette="Set1")+
labs(title="Spoorsuïcides locatie",
subtitle= "Periode van 1979-2021",
caption= "Bron: Wikipedia")
Storingen <- Disruptions %>%
filter (cause_en %in% c("person on the railway track", "person along the track", "person hit by a train", "collision", "people along the railway", "people on the railway track", "collision with a vehicle", "vehicle on the railway track"))%>%
filter (!ns_lines %in% c("Den Haag-Rotterdam-Breda (HSL); Den Haag-Rotterdam-Eindhoven (HSL); Rotterdam-Breda (HSL); Amsterdam-Rotterdam-Brussel (HSL); Amsterdam-Rotterdam-Breda (HSL); Rotterdam-Breda-Brussel (HSL); Amsterdam-Brussel-Paris (HSL); Rotterdam-Brussel-London (HSL); Amsterdam-Brussel-London (HSL); Den Haag-Rotterdam-Brussel (HSL)"))
Storingen$start_time <- as.Date(Storingen$start_time)
Storingen$year <- as.numeric(format(Storingen$start_time, "%Y"))
group_by(Storingen, ns_lines) %>%
summarize(duration_total = sum(duration_minutes)) %>%
arrange(desc(duration_total))%>%
rename("NS lijn" = ns_lines)%>%
top_n(10, duration_total)%>%
rename("Totale duur(minuten)" = "duration_total")
Storingen
ggplot(data=Storingen, aes(factor(year), y=duration_minutes, fill = cause_en)) +
geom_bar(stat="identity")+
#scale_colour_manual(values=c("lightblue4", "#e75480")) +
#scale_fill_manual(values = c("#add8e6", "Pink"))+
scale_alpha_manual(values=c(.8, 1))+
scale_y_continuous(expand = c(0,0)) + scale_x_discrete(expand = c(0,0))+
labs(fill = "Categorie storing") +
xlab("Jaar")+
ylab("Minuten")+
labs(title="Duratie van storingen waarvan aanrijding/ongeluk",
subtitle= "Periode van 2011-2019",
caption= "Bron: Rijdendetreinen")
Storingen_jaar <- Disruptions
Storingen_jaar$start_time <- as.Date(Storingen_jaar$start_time)
Storingen_jaar$year <- as.numeric(format(Storingen_jaar$start_time, "%Y"))
group_by(Storingen_jaar, year)%>%
#mutate(cause_en_all = cause_en)%>%
select(cause_en, year)%>%
filter (cause_en %in% c("person on the railway track", "person along the track", "person hit by a train", "collision", "people   along the railway", "people on the railway track", "collision with a vehicle", "vehicle on the railway track"))%>%
filter (year %in% c("2019"))
Storingen_per_jaar <- melt(Storingen_jaar, id.vars = c("year"))
ggplot(data=Storingen, aes(factor(year), y= cause_en, fill = cause_en)) +
geom_bar(stat="identity")
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Maand" =
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Maand" = Accident_Month
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
filter()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
filter()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
filter()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
filter()
View(NOTIFICATION_DATA)
View(Notification)
#install.packages("lubridate")
#install.packages("reshape2")
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(lubridate)
Disruptions <- read_xlsx("disruptions-2011-2019.xlsx")
AanrijdingLocatie <- read_xlsx("Spoordata_locatie.xlsx")
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
USER_DATA <- read.csv("USER_DATA.csv")
NOTIFICATION_DATA <- read.csv("NOTIFICATION_DATA.csv")
View(NOTIFICATION_DATA)
NOTIFICATION_DATA <- read.csv2("C:/Users/sohai/OneDrive/Bureaublad/Proftaak/proftaak22/Business/R files/NOTIFICATION_DATA.csv")
View(NOTIFICATION_DATA)
#install.packages("lubridate")
#install.packages("reshape2")
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(lubridate)
Disruptions <- read_xlsx("disruptions-2011-2019.xlsx")
AanrijdingLocatie <- read_xlsx("Spoordata_locatie.xlsx")
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
USER_DATA <- read.csv("USER_DATA.csv")
NOTIFICATION_DATA <- read.csv("NOTIFICATION_DATA.csv")
View(NOTIFICATION_DATA)
View(USER_DATA)
View(NOTIFICATION_DATA)
#install.packages("lubridate")
#install.packages("reshape2")
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(lubridate)
Disruptions <- read_xlsx("disruptions-2011-2019.xlsx")
AanrijdingLocatie <- read_xlsx("Spoordata_locatie.xlsx")
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
USER_DATA <- read.csv("USER_DATA.csv")
NOTIFICATION_DATA <- read.csv("NOTIFICATION_DATA.csv")
View(NOTIFICATION_DATA)
NOTIFICATION_DATA <- read.csv2("C:/Users/sohai/OneDrive/Bureaublad/Proftaak/proftaak22/Business/R files/NOTIFICATION_DATA.csv")
View(NOTIFICATION_DATA)
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Maand" = Accident_Month
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
#install.packages("lubridate")
#install.packages("reshape2")
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(lubridate)
Disruptions <- read_xlsx("disruptions-2011-2019.xlsx")
AanrijdingLocatie <- read_xlsx("Spoordata_locatie.xlsx")
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
USER_DATA <- read.csv("USER_DATA.csv")
NOTIFICATION_DATA <- read.csv("NOTIFICATION_DATA.csv")
library(readxl)
NOTIFICATION_DATA <- read_excel("NOTIFICATION_DATA.xlsx")
View(NOTIFICATION_DATA)
#install.packages("lubridate")
#install.packages("reshape2")
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(lubridate)
Disruptions <- read_xlsx("disruptions-2011-2019.xlsx")
AanrijdingLocatie <- read_xlsx("Spoordata_locatie.xlsx")
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
USER_DATA <- read.csv("USER_DATA.csv")
NOTIFICATION_DATA <- read.csv("NOTIFICATION_DATA.csv")
View(NOTIFICATION_DATA)
library(readxl)
NOTIFICATION_DATA <- read_excel("NOTIFICATION_DATA.xlsx")
View(NOTIFICATION_DATA)
#install.packages("lubridate")
#install.packages("reshape2")
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(lubridate)
Disruptions <- read_xlsx("disruptions-2011-2019.xlsx")
AanrijdingLocatie <- read_xlsx("Spoordata_locatie.xlsx")
SpoorData_solution <- read_xlsx("Spoordata_solution.xlsx")
AanrijdingData <- read_xlsx("AanrijdingData.xlsx")
SpoorData_prediction <- read_xlsx("Spoordata_prediction.xlsx")
SpoorData <- read_xlsx("1979-2020 spoordata.xlsx")
USER_DATA <- read.csv("USER_DATA.csv")
NOTIFICATION_DATA <- read_xlsx("NOTIFICATION_DATA.xlsx")
View(NOTIFICATION_DATA)
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Maand" = Accident_Month
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accidents" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Maand" = Accident_Month
ggplot(data = Notification, aes(x=Maand, y=Accidents, fill=Status)) +
View(NOTIFICATION_DATA)
View(Notification)
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)
rename("Accident" = Accident_Type)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)
ggplot(data = Notification, aes(x=Accident_Month, y=Accident_ID, fill=Status_Type)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)
filter(Accident_Month)
View(Notification)
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
ggplot(data = Notification, aes(x=Accident_Month, y=Accident_ID, fill=Status_Type)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
filter()
ggplot(data = Notification, aes(x=Accident_Month, y=Accident_ID, fill=Status_Type)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)%>%
filter()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)
filter(Month %in% c("1, 2, 3"))%>%
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)
Notification$Month <- as.Date(Notification$Month)
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)
Notification$Month <- as.Date(Notification$Month)
View(Storingen_jaar)
Notification <- NOTIFICATION_DATA%>%
select(Accident_ID, Status_Type, Accident_Month)%>%
rename("Accident" = Accident_ID)%>%
rename("Status" = Status_Type)%>%
rename("Month" = Accident_Month)
ggplot(data = Notification, aes(x=Month, y=Accident, fill=Status)) +
geom_col()
data
month()
month
View(USER_DATA)
View(Users)
View(USER_DATA)
View(USER_DATA)
